{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/ImageApi.js","components/Loader/Loader.js","components/App.js","index.js"],"names":["Searchbar","state","query","handleQueryChange","event","setState","target","value","toLowerCase","handleQuerySubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","tags","src","dataLargeImg","openModal","onClick","alt","data-largeimg","ImageGallery","images","map","id","webformatURL","largeImageURL","Button","fetchImages","modalRoot","document","querySelector","Modal","loading","handleOnClose","e","code","onClose","handleBackdropClick","currentTarget","handleImageLoaded","prevState","window","addEventListener","createPortal","onLoad","color","height","API_KEY","BASE_URL","page","a","url","fetch","then","response","ok","json","Promise","reject","Error","imageApi","propTypes","PropTypes","string","isRequired","number","LoaderSpin","App","isLoading","modalImage","onSearch","fetchImg","hits","length","catch","finally","onLoadMore","scrolling","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","onOpenModal","dataset","largeimg","closeModal","prevProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"6aAKqBA,E,4MACnBC,MAAQ,CACNC,MAAO,I,EAETC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAAOC,MAAMC,iB,EAG5CC,kBAAoB,SAACL,GACnBA,EAAMM,iBADuB,IAErBR,EAAU,EAAKD,MAAfC,MAER,GAAqB,KAAjBA,EAAMS,OACR,OAAOC,IAAMC,MAAM,mFAGrB,EAAKC,MAAMC,SAASb,GAEpB,EAAKG,SAAS,CAAEH,MAAO,M,4CAEzB,WACE,OACE,wBAAQc,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKR,kBAA5C,UACE,wBAAQS,KAAK,SAASF,UAAU,mBAAhC,SACE,sBAAMA,UAAU,4BAGlB,uBACEA,UAAU,kBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKd,6B,GAlCYoB,a,MCmBxBC,MApBf,YAAmE,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,UACnD,OACE,oBAAIZ,UAAU,mBAAmBa,QAASD,EAA1C,SACE,qBACEF,IAAKA,EACLI,IAAKL,EACLM,gBAAeJ,EACfX,UAAU,wBCgBHgB,MAtBf,YAA8C,IAAtBC,EAAqB,EAArBA,OAAQL,EAAa,EAAbA,UAC9B,OACE,oBAAIZ,UAAU,eAAd,SACGiB,EAAOC,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIV,EAAwC,EAAxCA,KAAMW,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACrC,OACE,cAAC,EAAD,CAEEZ,KAAMA,EACNC,IAAKU,EACLT,aAAcU,EACdT,UAAWA,GAJNO,SCGFG,G,MAVA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChB,OACE,wBAAQrB,KAAK,SAASW,QAASU,EAAavB,UAAU,SAAtD,4B,iBCAEwB,G,YAAYC,SAASC,cAAc,gBAEpBC,E,4MACnB1C,MAAQ,CACN2C,SAAS,G,EAgBXC,cAAgB,SAACC,GACA,WAAXA,EAAEC,MAIN,EAAKjC,MAAMkC,W,EAEbC,oBAAsB,SAAC7C,GACjBA,EAAM8C,gBAAkB9C,EAAME,QAChC,EAAKQ,MAAMkC,W,EAIfG,kBAAoB,WAClB,EAAK9C,SAAS,CAAEuC,SAAS,K,mDA5B3B,WACE3B,KAAKZ,UAAS,SAAC+C,GACb,MAAO,CAAER,SAAUQ,EAAUR,c,+BAGjC,WACE3B,KAAKZ,SAAS,CAAEuC,SAAS,IACzBS,OAAOC,iBAAiB,UAAWrC,KAAK4B,iB,kCAG1C,WACEQ,OAAOC,iBAAiB,UAAWrC,KAAK4B,iB,oBAoB1C,WAAU,IAAD,EACc5B,KAAKH,MAAlBY,EADD,EACCA,IAAKI,EADN,EACMA,IACb,OAAOyB,uBACL,sBAAK1B,QAASZ,KAAKgC,oBAAqBjC,UAAU,UAAlD,UACE,qBAAKA,UAAU,QAAQwC,OAAQvC,KAAKkC,kBAApC,SACE,qBAAKnC,UAAU,WAAWU,IAAKA,EAAKI,IAAKA,MAE1Cb,KAAKhB,MAAM2C,SACV,cAAC,IAAD,CAAQ1B,KAAK,eAAeuC,MAAM,UAAUC,OAAQ,SAGxDlB,O,GA9C6BjB,a,gBCN7BoC,EAAU,qCACVC,EAAW,2B,SAEFrB,E,gFAAf,WAA2BrC,EAAO2D,GAAlC,eAAAC,EAAA,6DACQC,EADR,UACiBH,EADjB,cAC+B1D,EAD/B,iBAC6C2D,EAD7C,gBACyDF,EADzD,0EAGSK,MAAMD,GAAKE,MAAK,SAACC,GACtB,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,kEAAwBrE,EAAxB,uGAP1B,4C,sBAWA,IAAMsE,EAAW,CAAEjC,eACnBA,EAAYkC,UAAY,CACtBvE,MAAOwE,IAAUC,OAAOC,WACxBf,KAAMa,IAAUG,OAAOD,YAEVJ,QCLAM,G,kNAVb7E,MAAQ,G,4CACR,WACE,OACE,qBAAKe,UAAU,SAAf,SACE,cAAC,IAAD,CAAQE,KAAK,eAAeuC,MAAM,UAAUC,OAAQ,W,GALnCnC,cCiGVwD,G,kNA5Fb9E,MAAQ,CACNC,MAAO,KACP+B,OAAQ,GACR4B,KAAM,EACNmB,WAAW,EACXC,WAAY,KACZnD,IAAK,KACLjB,MAAO,KACPe,WAAW,G,EAWbsD,SAAW,SAAChF,GACV,EAAKG,SAAS,CAAEH,QAAO+B,OAAQ,GAAI4B,KAAM,EAAGhD,MAAO,Q,EAGrDsE,S,sBAAW,gCAAArB,EAAA,wDACe,EAAK7D,MAArBC,EADC,EACDA,MAAO2D,EADN,EACMA,KAEf,EAAKxD,SAAS,CAAE2E,WAAW,IAE3BR,EACGjC,YAAYrC,EAAO2D,GACnBI,MAAK,YAAe,IAAZmB,EAAW,EAAXA,KACP,GAAoB,IAAhBA,EAAKC,OACP,OAAO,EAAKhF,SAAS,CACnBQ,MAAM,mMAAD,OAA0CX,KAGnD,EAAKG,UAAS,gBAAG4B,EAAH,EAAGA,OAAQ4B,EAAX,EAAWA,KAAX,MAAuB,CACnC5B,OAAO,GAAD,mBAAMA,GAAN,YAAiBmD,IACvBvB,KAAMA,SAGTyB,OAAM,SAACzE,GAAD,OAAW,EAAKR,SAAS,CAAEQ,MAAO,mGACxC0E,SAAQ,kBAAM,EAAKlF,SAAS,CAAE2E,WAAW,OAnBnC,2C,EAsBXQ,WAAa,WACX,EAAKnF,UAAS,SAAC+C,GAAD,MAAgB,CAAES,KAAMT,EAAUS,KAAO,MACvD,EAAK4B,a,EAGPA,UAAY,WACVC,YAAW,WACTrC,OAAOsC,SAAS,CACdC,IAAKnD,SAASoD,gBAAgBC,aAAe,IAC7CC,SAAU,aAEX,M,EAGLC,YAAc,SAAClD,GACbA,EAAEpC,iBACF,EAAKL,SAAS,CACZuB,WAAW,EACXqD,WAAYnC,EAAExC,OAAO2F,QAAQC,SAC7BpE,IAAKgB,EAAExC,OAAOwB,O,EAIlBqE,WAAa,WACX,EAAK9F,SAAS,CAAEuB,WAAW,K,wDA3D7B,SAAmBwE,EAAWhD,GAE1BA,EAAUlD,QAAUe,KAAKhB,MAAMC,OAC/BkD,EAAUS,OAAS5C,KAAKhB,MAAM4D,MAE9B5C,KAAKkE,a,oBAyDT,WAAU,IAAD,EAC0DlE,KAAKhB,MAA9DgC,EADD,EACCA,OAAQ+C,EADT,EACSA,UAAWpD,EADpB,EACoBA,UAAWqD,EAD/B,EAC+BA,WAAYnD,EAD3C,EAC2CA,IAAKjB,EADhD,EACgDA,MACvD,OACE,sBAAKG,UAAW+D,EAAhB,UACE,cAAC,EAAD,CAAWhE,SAAUE,KAAKiE,WACzBF,GAAa,cAAC,EAAD,IACb/C,EAAOoD,OAAS,IAAMxE,GACrB,qCACE,cAAC,EAAD,CAAce,UAAWX,KAAK+E,YAAa/D,OAAQA,IACnD,cAAC,EAAD,CAAQM,YAAatB,KAAKuE,gBAG7B5D,GACC,cAAC,EAAD,CAAOoB,QAAS/B,KAAKkF,WAAYzE,IAAKuD,EAAYnD,IAAKA,W,GAtF/CP,cCHlB8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9D,SAAS+D,eAAe,W","file":"static/js/main.2d50bea2.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Searchbar.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n  handleQueryChange = (event) => {\r\n    this.setState({ query: event.target.value.toLowerCase() });\r\n  };\r\n\r\n  handleQuerySubmit = (event) => {\r\n    event.preventDefault();\r\n    const { query } = this.state;\r\n\r\n    if (query.trim() === \"\") {\r\n      return toast.error(\"введите запрос\");\r\n    }\r\n\r\n    this.props.onSubmit(query);\r\n\r\n    this.setState({ query: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleQuerySubmit}>\r\n          <button type=\"submit\" className=\"SearchFormButton\">\r\n            <span className=\"SearchFormButtonLabel\"></span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchFormInput\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleQueryChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGallery.css\";\r\n\r\nfunction ImageGalleryItem({ tags, src, dataLargeImg, openModal }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={openModal}>\r\n      <img\r\n        src={src}\r\n        alt={tags}\r\n        data-largeimg={dataLargeImg}\r\n        className=\"GalleryItemImage\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  dataLargeImg: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGallery.css\";\r\n\r\nfunction ImageGallery({ images, openModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ id, tags, webformatURL, largeImageURL }) => {\r\n        return (\r\n          <ImageGalleryItem\r\n            key={id}\r\n            tags={tags}\r\n            src={webformatURL}\r\n            dataLargeImg={largeImageURL}\r\n            openModal={openModal}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\r\n  openModal: PropTypes.func,\r\n};\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ fetchImages }) => {\r\n  return (\r\n    <button type=\"button\" onClick={fetchImages} className=\"Button\">\r\n      Load more...\r\n    </button>\r\n  );\r\n};\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\nexport default Button;\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n  toggleLoadind() {\r\n    this.setState((prevState) => {\r\n      return { loading: !prevState.loading };\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    window.addEventListener(\"keydown\", this.handleOnClose);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"keydown\", this.handleOnClose);\r\n  }\r\n\r\n  handleOnClose = (e) => {\r\n    if (e.code !== \"Escape\") {\r\n      return;\r\n    }\r\n\r\n    this.props.onClose();\r\n  };\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleImageLoaded = () => {\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return createPortal(\r\n      <div onClick={this.handleBackdropClick} className=\"overlay\">\r\n        <div className=\"modal\" onLoad={this.handleImageLoaded}>\r\n          <img className=\"modalImg\" src={src} alt={alt}></img>\r\n        </div>\r\n        {this.state.loading && (\r\n          <Loader type=\"BallTriangle\" color=\"#3f51b5\" height={350} />\r\n        )}\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst API_KEY = \"12041816-7b3c6fcda05d87e4a56d1e906\";\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\n\r\nasync function fetchImages(query, page) {\r\n  const url = `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n  return fetch(url).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`По запросу ${query} ничего не найдено`));\r\n  });\r\n}\r\n\r\nconst imageApi = { fetchImages };\r\nfetchImages.propTypes = {\r\n  query: PropTypes.string.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n};\r\nexport default imageApi;\r\n","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Loader.css\";\r\n\r\nclass LoaderSpin extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"loader\">\r\n        <Loader type=\"BallTriangle\" color=\"#3f51b5\" height={60} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoaderSpin;\r\n","import React, { Component } from \"react\";\r\nimport Searchbar from \"./Searchbar\";\r\nimport ImageGallery from \"./ImageGallery\";\r\nimport Button from \"./Button\";\r\nimport Modal from \"./Modal\";\r\nimport imageApi from \"../services/ImageApi\";\r\nimport LoaderSpin from \"./Loader/\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    query: null,\r\n    images: [],\r\n    page: 1,\r\n    isLoading: false,\r\n    modalImage: null,\r\n    alt: null,\r\n    error: null,\r\n    openModal: false,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.query !== this.state.query ||\r\n      prevState.page !== this.state.page\r\n    ) {\r\n      this.fetchImg();\r\n    }\r\n  }\r\n\r\n  onSearch = (query) => {\r\n    this.setState({ query, images: [], page: 1, error: null });\r\n  };\r\n\r\n  fetchImg = async () => {\r\n    const { query, page } = this.state;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    imageApi\r\n      .fetchImages(query, page)\r\n      .then(({ hits }) => {\r\n        if (hits.length === 0) {\r\n          return this.setState({\r\n            error: `Не удалось найти картинку по запросу ${query}`,\r\n          });\r\n        }\r\n        this.setState(({ images, page }) => ({\r\n          images: [...images, ...hits],\r\n          page: page,\r\n        }));\r\n      })\r\n      .catch((error) => this.setState({ error: \"Побробуйте снова\" }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  onLoadMore = () => {\r\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\r\n    this.scrolling();\r\n  };\r\n\r\n  scrolling = () => {\r\n    setTimeout(() => {\r\n      window.scrollBy({\r\n        top: document.documentElement.clientHeight - 150,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  onOpenModal = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      openModal: true,\r\n      modalImage: e.target.dataset.largeimg,\r\n      alt: e.target.alt,\r\n    });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ openModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, openModal, modalImage, alt, error } = this.state;\r\n    return (\r\n      <div className={App}>\r\n        <Searchbar onSubmit={this.onSearch} />\r\n        {isLoading && <LoaderSpin />}\r\n        {images.length > 0 && !error && (\r\n          <>\r\n            <ImageGallery openModal={this.onOpenModal} images={images} />\r\n            <Button fetchImages={this.onLoadMore} />\r\n          </>\r\n        )}\r\n        {openModal && (\r\n          <Modal onClose={this.closeModal} src={modalImage} alt={alt}></Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./base.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}